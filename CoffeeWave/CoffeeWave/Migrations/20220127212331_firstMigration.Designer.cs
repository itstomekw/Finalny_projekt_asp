// <auto-generated />
using System;
using CoffeeWave.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoffeeWave.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220127212331_firstMigration")]
    partial class firstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoffeeWave.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Coffee"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Tea"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Yerba Mate"
                        },
                        new
                        {
                            CategoryId = 4,
                            Name = "Accessories"
                        });
                });

            modelBuilder.Entity("CoffeeWave.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InStock")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Recommended")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Figa Coffee",
                            CategoryId = 1,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque sollicitudin ornare sem, eu dapibus libero lobortis at. Proin felis libero, mollis quis aliquam interdum, gravida id sem. ",
                            ImageUrl = "https://cdn.pixabay.com/photo/2020/08/04/09/18/coffee-5462272_960_720.jpg",
                            InStock = true,
                            Name = "Figa Coffee - Gwatemala La Bolsa",
                            Price = 45.99m,
                            Recommended = true
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Rocket Bean",
                            CategoryId = 1,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque sollicitudin ornare sem, eu dapibus libero lobortis at. Proin felis libero, mollis quis aliquam interdum, gravida id sem. ",
                            ImageUrl = "https://cdn.pixabay.com/photo/2020/08/04/09/18/coffee-5462272_960_720.jpg",
                            InStock = true,
                            Name = "Rocket Bean - Kenya Ruka Chui",
                            Price = 49.99m,
                            Recommended = false
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Autumn Coffee",
                            CategoryId = 1,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque sollicitudin ornare sem, eu dapibus libero lobortis at. Proin felis libero, mollis quis aliquam interdum, gravida id sem. ",
                            ImageUrl = "https://cdn.pixabay.com/photo/2020/08/04/09/18/coffee-5462272_960_720.jpg",
                            InStock = true,
                            Name = "Autumn Coffee - Brazylia Colibri Santos Espresso",
                            Price = 56.99m,
                            Recommended = false
                        },
                        new
                        {
                            Id = 4,
                            Brand = "BingoTwingo",
                            CategoryId = 2,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque sollicitudin ornare sem, eu dapibus libero lobortis at. Proin felis libero, mollis quis aliquam interdum, gravida id sem. ",
                            ImageUrl = "https://cdn.pixabay.com/photo/2015/07/02/10/44/tea-828940_960_720.jpg",
                            InStock = true,
                            Name = "Pure Ceylon",
                            Price = 15.99m,
                            Recommended = false
                        },
                        new
                        {
                            Id = 5,
                            Brand = "BingoTwingo",
                            CategoryId = 2,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque sollicitudin ornare sem, eu dapibus libero lobortis at. Proin felis libero, mollis quis aliquam interdum, gravida id sem. ",
                            ImageUrl = "https://cdn.pixabay.com/photo/2015/07/02/10/44/tea-828940_960_720.jpg",
                            InStock = true,
                            Name = "Earl Grey Strong",
                            Price = 12.99m,
                            Recommended = false
                        },
                        new
                        {
                            Id = 6,
                            Brand = "BingoTwingo",
                            CategoryId = 2,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque sollicitudin ornare sem, eu dapibus libero lobortis at. Proin felis libero, mollis quis aliquam interdum, gravida id sem. ",
                            ImageUrl = "https://cdn.pixabay.com/photo/2015/07/02/10/44/tea-828940_960_720.jpg",
                            InStock = true,
                            Name = "English Breakfast",
                            Price = 24.99m,
                            Recommended = false
                        },
                        new
                        {
                            Id = 7,
                            Brand = "Amanda",
                            CategoryId = 3,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque sollicitudin ornare sem, eu dapibus libero lobortis at. Proin felis libero, mollis quis aliquam interdum, gravida id sem. ",
                            ImageUrl = "https://cdn.pixabay.com/photo/2017/06/24/17/00/yerba-mate-2438196_960_720.jpg",
                            InStock = true,
                            Name = "Amanda Despalada",
                            Price = 11.99m,
                            Recommended = false
                        },
                        new
                        {
                            Id = 8,
                            Brand = "Pajarito",
                            CategoryId = 3,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque sollicitudin ornare sem, eu dapibus libero lobortis at. Proin felis libero, mollis quis aliquam interdum, gravida id sem. ",
                            ImageUrl = "https://cdn.pixabay.com/photo/2017/06/24/17/00/yerba-mate-2438196_960_720.jpg",
                            InStock = true,
                            Name = "Pajarito Seleccion Especial",
                            Price = 19.99m,
                            Recommended = false
                        },
                        new
                        {
                            Id = 9,
                            Brand = "Cruz de Malta",
                            CategoryId = 3,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque sollicitudin ornare sem, eu dapibus libero lobortis at. Proin felis libero, mollis quis aliquam interdum, gravida id sem. ",
                            ImageUrl = "https://cdn.pixabay.com/photo/2017/06/24/17/00/yerba-mate-2438196_960_720.jpg",
                            InStock = true,
                            Name = "Cruz de Malta - Classic",
                            Price = 19.99m,
                            Recommended = false
                        },
                        new
                        {
                            Id = 10,
                            Brand = "BestasMateras",
                            CategoryId = 4,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque sollicitudin ornare sem, eu dapibus libero lobortis at. Proin felis libero, mollis quis aliquam interdum, gravida id sem. ",
                            ImageUrl = "https://cdn.pixabay.com/photo/2017/06/24/17/02/yerba-mate-2438200_960_720.jpg",
                            InStock = true,
                            Name = "Matero",
                            Price = 12.99m,
                            Recommended = false
                        },
                        new
                        {
                            Id = 11,
                            Brand = "NicuPor Ce Lanes",
                            CategoryId = 4,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque sollicitudin ornare sem, eu dapibus libero lobortis at. Proin felis libero, mollis quis aliquam interdum, gravida id sem. ",
                            ImageUrl = "https://cdn.pixabay.com/photo/2016/05/01/05/38/kettle-1364454_960_720.jpg",
                            InStock = true,
                            Name = "Kettle and cups",
                            Price = 95.99m,
                            Recommended = true
                        },
                        new
                        {
                            Id = 12,
                            Brand = "PoorHarius",
                            CategoryId = 4,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque sollicitudin ornare sem, eu dapibus libero lobortis at. Proin felis libero, mollis quis aliquam interdum, gravida id sem. ",
                            ImageUrl = "https://cdn.pixabay.com/photo/2013/12/31/16/18/horizontal-236899_960_720.jpg",
                            InStock = true,
                            Name = "Coffee Scale",
                            Price = 69.99m,
                            Recommended = false
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("CoffeeWave.Models.Product", b =>
                {
                    b.HasOne("CoffeeWave.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CoffeeWave.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
